@model DataSource.Suggestions
@{
    ViewBag.Title = "Create New Suggestion";
}

<style type="text/css">
    /*table{
    border-collapse: collapse;
    border: 1px solid #ddd;
    }
    table td{
    border: 1px solid #ddd;
    }*/
    .field-validation-error {
        color: #444 !important;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ccc;
        background-color: #fff;
    }
</style>

<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var AreaId = '@ViewBag.AreaId';
    var PositionId = '@ViewBag.PositionId';
    $(document).ready(function () {
        document.getElementById("Technology").value = 7
        document.getElementById("Level").value = 5
        $("#Position").append('<option value="@ViewBag.Other">Please select a position</option>');
        document.getElementById("Position").value = @ViewBag.Other;
        $("#Area").change(function () {
            if (document.getElementById("Area").selectedIndex == 0) {
                document.getElementById("area").innerHTML = "The Area field is required";
            }
            else {
                document.getElementById("area").innerHTML = "";
            }
        })

        $("#Topic").keyup(function () {
            if ($('#Topic').val() == "") {
                document.getElementById("topic").innerHTML = "The Topic field cannot be empty";
            }
            else {
                document.getElementById("topic").innerHTML = "";
            }
        });

        $("#Source").keyup(function () {
            if ($('#Source').val() == "") {
                document.getElementById("source").innerHTML = "The Source field cannot be empty";
            }
            else {
                document.getElementById("source").innerHTML = "";
            }
        });

        //Dropdownlist Selectedchange event
        $("#Area").change(function () {
            $("#Position").empty();
            $("#Position").append('<option value="@ViewBag.Other">Please select a position</option>');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("JsonGetPosition")', // we are calling json method
                dataType: 'json',
                data: { id: $("#Area").val() },
                // here we are get value of selected area and passing same value
                // as inputto json method JsonGetPosition.
                success: function (position) {
                    // position contains the JSON formatted list
                    // of states passed from the controller
                    $.each(position, function (i, position) {
                        $("#Position").append('<option value="' + position.Value + '">' +  position.Text + '</option>');
                        // here we are adding option for Positions
                    });
                },
                error: function (ex) {
                    alert('Error','Failed to retrieve positions.' + ex);
                }
            });
            return false;
        })

        if (PositionId != 0) {
            $("#Position").empty();
            $("#Position").append('<option value="@ViewBag.Other">Please select a position</option>');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("JsonGetPosition")',
                dataType: 'json',
                data: { id: AreaId },
                success: function (position) {
                    $.each(position, function (i, position) {
                        $("#Position").append('<option value="' + position.Value + '">' + position.Text + '</option>');
                    });

                    document.getElementById("Area").value = AreaId;
                    //document.getElementById("Position").value = PositionId;
                },
                error: function (ex) {
                    alert('Failed to retrieve positions.' + ex);
                }
            });
            return false;
        }
    });
</script>

<div class="pageDescription">
    <div class="description">
        <h2>@ViewBag.Title</h2>

        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)
            <fieldset>                
                <div class="editor-label">
                    <span><strong>Topic:</strong></span>
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Topic, new { style = "width:500px", required = "required", autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Topic, "The Topic field is required")
                </div>
                <div>
                    <label id="topic" style="color: red;"></label>
                </div>
                <br />                    
                <div class="editor-label">
                    <span><strong>Source:</strong></span>
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Source, new { style = "width:500px", required = "required", autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.Source)
                </div>
                <br />
                <div class="editor-label">
                    <span><strong>Area:</strong></span>
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Area", (IEnumerable<SelectListItem>)ViewData["ListOfAreas"], "Please select an area", new { required = "required" })
                    <label id="area" style="color: red;"></label>
                </div>
                <br />
                <div class="editor-label">
                    <span><strong>Position:</strong></span>
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Position", new SelectList(string.Empty, "Value", "Text"))
                </div>
                <br />
                <div class="editor-label">
                    <span><strong>Technology:</strong></span>
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Technology", (IEnumerable<SelectListItem>)ViewData["ListOfTechnologies"])
                    <label id="technology" style="color: red;"></label>
                </div>
                <br />
                <div class="editor-label">
                    <span><strong>Level:</strong></span>
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Level", (IEnumerable<SelectListItem>)ViewData["ListOfLevels"])
                    <label id="level" style="color: red;"></label>
                </div>
                <div>
                    <label id="source" style="color: red;"></label>
                </div>

                <br />

                <div>
                    <input type="submit" id="btnCreate" value="Create">
                </div>

                @if (ViewBag.error != "")
                {
                    <label style="color: red; font-size:medium"><strong>@ViewBag.error</strong></label>
                }
            </fieldset>
            
        }
    </div>
</div>
