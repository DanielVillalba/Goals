@model DataSource.TrainingProgram
@{
    ViewBag.Title = "Edit Training Program";
}

<h2>@ViewBag.Title</h2>

<style type="text/css">
    table{
    border-collapse: collapse;
    border: 1px solid #ddd;
    }
    table td{
    border: 1px solid #ddd;
    }
    #Position1_AreaId {
        border: 1px solid #ccc;
        background-color: #ddd;
    }
    #Position {
        border: 1px solid #ccc;
        background-color: #ddd;
    }
</style>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var AreaId = '@Model.Position1.AreaId';
    var PositionId = '@ViewBag.PositionId';
    var error = '@ViewBag.error';

    $(document).ready(function () {
        $("#Name").keyup(function () {
            if ($('#Name').val() == "") {
                document.getElementById("name").innerHTML = "The Name field cannot be empty";
            }
            else {
                document.getElementById("name").innerHTML = "";
            }
        });

        $("#Position1_AreaId").change(function () {
            if (document.getElementById("Position1_AreaId").selectedIndex == 0) {
                document.getElementById("area").innerHTML = "The Area field is required";
            }
            else {
                document.getElementById("area").innerHTML = "";
            }
        });

        $("#Category").change(function () {
            if (document.getElementById("Category").selectedIndex == 0) {
                document.getElementById("category").innerHTML = "The Category field is required";
            }
            else {
                document.getElementById("category").innerHTML = "";
            }
        });

        $("#Points").keyup(function () {
            if ($('#Points').val() == "") {
                document.getElementById("points").innerHTML = "The Points field cannot be empty";
            }
            else {
                document.getElementById("points").innerHTML = "";
            }
        });

        $("#Position1_AreaId").change(function () {
            $("#Position").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("JsonGetPosition")',
                dataType: 'json',
                data: { id: $("#Position1_AreaId").val() },
                success: function (position) {
                    $.each(position, function (i, position) {
                        $("#Position").append('<option value="' + position.Value + '">' + position.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve positions.' + ex);
                }
            });
            return false;
        });

    if (PositionId != 0) {
        $("#Position").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("JsonGetPosition")',
            dataType: 'json',
            data: { id: AreaId },
            success: function (position) {
                $.each(position, function (i, position) {
                    $("#Position").append('<option value="' + position.Value + '">' + position.Text + '</option>');
                });

                document.getElementById("Position1_AreaId").value = AreaId;
                document.getElementById("Position").value = PositionId;
            },
            error: function (ex) {
                alert('Failed to retrieve positions.' + ex);
            }
        });
        return false;
    }
    else
    {
        window.onload = function () { fillDropDown('@Model.Position.ToString()') };
    }

    function fillDropDown(x) {
            $("#Position").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("JsonGetPosition")',
                dataType: 'json',
                data: { id: $("#Position1_AreaId").val() },
                success: function (position) {                  
                    $.each(position, function (i, position) {
                        $("#Position").append('<option value="' + position.Value + '">' + position.Text + '</option>');
                    });
                    document.getElementById("Position").value = x;
                },
                error: function (ex) {
                    alert('Failed to retrieve positions.' + ex);
                }
            });
            return false;
        }     
    });
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Suggestion</legend>

        <br />        

        @Html.HiddenFor(model => model.IdTrainingProgram)
        <div class="editor-label">
            <span><strong>Name Program:</strong></span>
        </div>
        <div class="editor-label">
            @Html.TextBoxFor(x=>x.Name,new { style = "width:500px", required = "required", autocomplete = "off" })
            <br />
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div>
            <label id="name" style="color: red;"></label>
        </div>
        <div class="editor-label">
            <span><strong>Area:</strong></span>
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.Position1.AreaId)
            @Html.DropDownListFor(m=>m.Position1.AreaId, (IEnumerable<SelectListItem>)ViewData["ListOfAreas"], "Please select an area",new { style = "width:500px", required = "required", disabled = "disabled" })            
        </div>
        <div>
            <label id="area" style="color: red;"></label>
        </div>
        <div class="editor-label">
            <span><strong>@Html.LabelFor(x=>x.Position)</strong></span>
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.Position)
            @Html.DropDownListFor(m=>m.Position, new SelectList(string.Empty, "Value", "Text"), "Please select a position",new { style = "width:500px", disabled = "disabled" })
        </div>
        <div class="editor-field">
            <span><strong>@Html.LabelFor(x=>x.Category)</strong></span>
        </div>
        <div class="editor-label">
            @Html.DropDownListFor(model => model.Category, new SelectList(ViewBag.ListOfCategories,"Value","Text"),"Please select a category",new { style = "width:500px", required = "required" })
        </div>
        <div>
            <label id="category" style="color: red;"></label>
        </div>
@*        <div class="editor-label">
            @Html.LabelFor(x=>x.Points)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Points, new { style = "width:500px", required = "required", @type = "number", autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Points)
        </div>*@
        <div>
            <label id="points" style="color: red;"></label>
        </div>
        <div class="editor-label">
            <span><strong>@Html.LabelFor(x=>x.Link)</strong></span>
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Link, new { style = "width:500px", autocomplete = "off" })
            @Html.ValidationMessageFor(model => model.Link)
        </div>
        <div>
            <label id="link" style="color: red;"></label>
        </div>
        <div class="editor-label">
            <span><strong>Start Date:</strong></span>
        </div>
        <div class="editor-field">
            @Html.TextBox("StartDate", Model.StartDate.Value.ToShortDateString(), new { @class = "StartDate", @readonly = "readonly", required = "required" })
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>
        <div class="editor-label">
            <span><strong>Finish Date:</strong></span>
        </div>
        <div class="editor-field">
            @Html.TextBox("FinishDate", Model.FinishDate.Value.ToShortDateString(), new { @class = "FinishDate", @readonly = "readonly", required = "required" })
            @Html.ValidationMessageFor(model => model.FinishDate)
        </div>

        <br />

        <div>
            <input type="submit" id="btnSave" value="Save">            
        </div>

        <br />

        @if (ViewBag.error != "")
        {
            <label style="color: red; font-size: medium"><strong>@ViewBag.error</strong></label>
        }
    </fieldset>
    <p>
        <a href="@Url.Action("TrainingProgramAdmin", "GoalTracking")">
            <img src="@Url.Content("~/Content/images/BackTiempoButtonWB.jpg")" height="25" width="25" title="Back to TrainingProgram" style="border: none" />
        </a>
    </p>
}

